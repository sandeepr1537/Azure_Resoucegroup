trigger:
- main  # Adjust the branch name as per your repository setup

variables:
  azureSubscription: 'your-service-connection'  # Name of the service connection to Azure
  location: 'Australia East'  # Location for the resource group
  resourceGroupName: 'example-resource-group'  # Name of the resource group

stages:
- stage: Deploy
  jobs:
  - job: TerraformDeployment
    displayName: 'Deploy Azure Resource Group using Terraform'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseTerraform@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: '1.5.x'  # Adjust the version of Terraform you want to use

    - task: TerraformInstaller@0
      displayName: 'Install Terraform'

    - checkout: self  # Checkout the repository containing Terraform files

    - script: |
        terraform init
        terraform plan -out=tfplan
      displayName: 'Terraform Init and Plan'

    - script: |
        terraform apply -auto-approve
      displayName: 'Terraform Apply'
      env:
        ARM_CLIENT_ID: $(servicePrincipalClientId)  # Set up in Azure DevOps pipeline secrets
        ARM_CLIENT_SECRET: $(servicePrincipalClientSecret)  # Set up in Azure DevOps pipeline secrets
        ARM_SUBSCRIPTION_ID: $(azureSubscriptionId)  # Set up in Azure DevOps pipeline secrets
        ARM_TENANT_ID: $(azureTenantId)  # Set up in Azure DevOps pipeline secrets

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Terraform Plan as Artifact'
      inputs:
        artifactName: 'terraform-plan'
        publishLocation: 'Container'
